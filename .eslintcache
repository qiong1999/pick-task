[{"D:\\pick-task\\src\\index.js":"1","D:\\pick-task\\src\\App.js":"2","D:\\pick-task\\src\\reportWebVitals.js":"3","D:\\pick-task\\src\\pages\\login\\login.js":"4","D:\\pick-task\\src\\components\\form\\form.js":"5","D:\\pick-task\\src\\pages\\home\\home.js":"6","D:\\pick-task\\src\\components\\card\\card.js":"7","D:\\pick-task\\src\\pages\\task\\task.js":"8","D:\\pick-task\\src\\components\\list\\list.js":"9"},{"size":598,"mtime":1611045453365,"results":"10","hashOfConfig":"11"},{"size":1171,"mtime":1611059575903,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606356520965,"results":"13","hashOfConfig":"11"},{"size":2019,"mtime":1611043694949,"results":"14","hashOfConfig":"11"},{"size":552,"mtime":1611041364867,"results":"15","hashOfConfig":"11"},{"size":2229,"mtime":1611059116324,"results":"16","hashOfConfig":"11"},{"size":652,"mtime":1611063141532,"results":"17","hashOfConfig":"11"},{"size":457,"mtime":1611062603049,"results":"18","hashOfConfig":"11"},{"size":277,"mtime":1611062586454,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ntjmiq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\pick-task\\src\\index.js",[],["42","43"],"D:\\pick-task\\src\\App.js",["44","45","46","47","48"],"import React,{useState,useEffect} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from 'react-router-dom';\n\nimport Login from './pages/login/login.js';\nimport Form from './components/form/form.js'\nimport Home from './pages/home/home.js'\nimport Task from './pages/task/task.js'\nimport './App.css';\n\nfunction App() {\n  const [sign,setSign]=useState(true);\n  \n  const history=useHistory()\n  \n  return (\n    <>\n      <link to=\"/\">\n      </link>\n      <link to=\"/login\"></link>\n      <link to=\"/sign\"></link>\n      <link to=\"/home\"></link>\n      <link to=\"/task\"></link>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login listenSign={(e)=>{e?history.push('/sign'):history.push('/login')}}></Login>\n        </Route>\n        <Route path=\"/sign\">\n          <Form title=\"Welcome to create account \" state=\"注册\"></Form>\n        </Route>\n        <Route path=\"/login\">\n          <Form title=\"Welcome back\" state=\"登录\"></Form>\n        </Route>\n        <Route path=\"/home\">\n          <Home></Home>\n        </Route>\n        <Route>\n          <Task></Task>\n        </Route>\n      </Switch>\n   </>\n  );\n}\n\nexport default App;\n","D:\\pick-task\\src\\reportWebVitals.js",[],"D:\\pick-task\\src\\pages\\login\\login.js",["49","50","51","52"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction Login(props) {\r\n  const [scrollY, setScrollY] = useState(0);\r\n  const [select, setSelect] = useState(true);\r\n  useEffect(() => {\r\n    document.addEventListener(\"scroll\", (e) => {\r\n      setScrollY(window.scrollY);\r\n    });\r\n  }, []);\r\n  const classes = useMemo(() => {\r\n    if (scrollY < 10) return styles.header;\r\n    return styles.scroll;\r\n  });\r\n  const ownStyle = useMemo(() => {\r\n    if (select) return styles.sign;\r\n    return styles.login;\r\n  });\r\n  const signClass = classNames(\r\n    styles.rgSign,\r\n    ownStyle === styles.sign ? styles.sign : \"\"\r\n  );\r\n  const loginClass = classNames(\r\n    styles.rgLogin,\r\n    ownStyle === styles.sign ? \"\" : styles.login\r\n  );\r\n  const handleClick=(value)=>{\r\n    props.listenSign(value)\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={classes}>\r\n        <div className={styles.lf}> Pick Task</div>\r\n        <div\r\n          className={signClass}\r\n          onClick={() => {\r\n            setSelect(true);\r\n            handleClick(true)\r\n          }}\r\n        >\r\n          <a href=\"#\">注册</a>\r\n        </div>\r\n        <div\r\n          className={loginClass}\r\n          onClick={() => {\r\n            setSelect(false);\r\n            handleClick(false)\r\n          }}\r\n        >\r\n          <a href=\"#\">登录</a>\r\n        </div>\r\n      </div>\r\n      <div className={styles.bodyer}>\r\n        \r\n          <div className={styles.state}>\r\n            <h2>Pick Task 一款帮助个人以更高效的方式开展工作并完成工作</h2>\r\n            <p>Pick Task 以列表和任务卡片的形式为您提供有趣的组织项目方式</p>\r\n          </div>\r\n          <img className={styles.image} src=\"pickTask.png\" alt=\"宣传照片\" />\r\n        </div>\r\n     \r\n      <div className={styles.footer}>Pick Task一个开源的任务管理工具</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\pick-task\\src\\components\\form\\form.js",[],"D:\\pick-task\\src\\pages\\home\\home.js",["53"],"import React, { useState } from \"react\";\r\nimport styles from \"./home.module.css\";\r\nimport classNames from \"classnames\";\r\n\r\nimport Card from \"../../components/card/card.js\";\r\n\r\nfunction Home() {\r\n  const [active, setActive] = useState(\"board\");\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <input type=\"text\" className={styles.search} placeholder=\"搜索\" />\r\n      </div>\r\n      <div className={styles.bodyer}>\r\n        <div className={styles.aside}>\r\n          <div\r\n            className={`${styles.board} ${\r\n              active === \"board\" ? styles.active : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              setActive(\"board\");\r\n            }}\r\n          >\r\n            看板\r\n          </div>\r\n          <div\r\n            className={`${styles.firstpage} ${\r\n              active !== \"board\" ? styles.active : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              setActive(\"firstpage\");\r\n            }}\r\n          >\r\n            主页\r\n          </div>\r\n        </div>\r\n        <div className={styles.main}>\r\n          <div className={styles.part1}>\r\n            <div>最近查看</div>\r\n            <Card\r\n              title=\"hello\"\r\n              color={{ backgroundColor: \"rgb(175, 233, 18)\" }}\r\n            ></Card>\r\n            <Card\r\n              title=\"hello\"\r\n              color={{ backgroundColor: \"rgb(175, 233, 18)\" }}\r\n            ></Card>\r\n            <Card\r\n              title=\"hello\"\r\n              color={{ backgroundColor: \"rgb(175, 233, 18)\" }}\r\n            ></Card>\r\n          </div>\r\n          <div className={styles.part2}>\r\n            <div>个人看板</div>\r\n            <Card\r\n              title=\"hello\"\r\n              color={{ backgroundColor: \"rgb(175, 233, 18)\" }}\r\n            ></Card>\r\n            <Card\r\n              title=\"hello\"\r\n              color={{ backgroundColor: \"rgb(175, 233, 18)\" }}\r\n            ></Card>{\" \"}\r\n            <Card\r\n              title=\"hello\"\r\n              color={{ backgroundColor: \"rgb(175, 233, 18)\" }}\r\n            ></Card>\r\n            <Card type=\"new\" title=\"新建\"></Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\pick-task\\src\\components\\card\\card.js",[],"D:\\pick-task\\src\\pages\\task\\task.js",[],"D:\\pick-task\\src\\components\\list\\list.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":24,"nodeType":"60","messageId":"61","endLine":1,"endColumn":33},{"ruleId":"58","severity":1,"message":"62","line":3,"column":20,"nodeType":"60","messageId":"61","endLine":3,"endColumn":26},{"ruleId":"58","severity":1,"message":"63","line":6,"column":3,"nodeType":"60","messageId":"61","endLine":6,"endColumn":7},{"ruleId":"58","severity":1,"message":"64","line":17,"column":10,"nodeType":"60","messageId":"61","endLine":17,"endColumn":14},{"ruleId":"58","severity":1,"message":"65","line":17,"column":15,"nodeType":"60","messageId":"61","endLine":17,"endColumn":22},{"ruleId":"66","severity":1,"message":"67","line":13,"column":19,"nodeType":"60","endLine":13,"endColumn":26},{"ruleId":"66","severity":1,"message":"67","line":17,"column":20,"nodeType":"60","endLine":17,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":43,"column":11,"nodeType":"70","endLine":43,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":52,"column":11,"nodeType":"70","endLine":52,"endColumn":23},{"ruleId":"58","severity":1,"message":"71","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":18},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Link' is defined but never used.","'sign' is assigned a value but never used.","'setSign' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'classNames' is defined but never used.","no-global-assign","no-unsafe-negation"]