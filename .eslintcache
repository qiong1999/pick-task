[{"D:\\pick-task\\src\\index.js":"1","D:\\pick-task\\src\\App.js":"2","D:\\pick-task\\src\\reportWebVitals.js":"3","D:\\pick-task\\src\\pages\\login\\login.js":"4","D:\\pick-task\\src\\components\\form\\form.js":"5","D:\\pick-task\\src\\pages\\home\\home.js":"6"},{"size":598,"mtime":1611045453365,"results":"7","hashOfConfig":"8"},{"size":1043,"mtime":1611046883144,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1606356520965,"results":"10","hashOfConfig":"8"},{"size":2019,"mtime":1611043694949,"results":"11","hashOfConfig":"8"},{"size":552,"mtime":1611041364867,"results":"12","hashOfConfig":"8"},{"size":153,"mtime":1611046737010,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ntjmiq",{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\pick-task\\src\\index.js",[],"D:\\pick-task\\src\\App.js",["28","29","30","31","32"],"D:\\pick-task\\src\\reportWebVitals.js",[],["33","34"],"D:\\pick-task\\src\\pages\\login\\login.js",["35","36","37","38"],"import React, { useState, useEffect, useMemo } from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport classNames from \"classnames\";\r\n\r\nfunction Login(props) {\r\n  const [scrollY, setScrollY] = useState(0);\r\n  const [select, setSelect] = useState(true);\r\n  useEffect(() => {\r\n    document.addEventListener(\"scroll\", (e) => {\r\n      setScrollY(window.scrollY);\r\n    });\r\n  }, []);\r\n  const classes = useMemo(() => {\r\n    if (scrollY < 10) return styles.header;\r\n    return styles.scroll;\r\n  });\r\n  const ownStyle = useMemo(() => {\r\n    if (select) return styles.sign;\r\n    return styles.login;\r\n  });\r\n  const signClass = classNames(\r\n    styles.rgSign,\r\n    ownStyle === styles.sign ? styles.sign : \"\"\r\n  );\r\n  const loginClass = classNames(\r\n    styles.rgLogin,\r\n    ownStyle === styles.sign ? \"\" : styles.login\r\n  );\r\n  const handleClick=(value)=>{\r\n    props.listenSign(value)\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={classes}>\r\n        <div className={styles.lf}> Pick Task</div>\r\n        <div\r\n          className={signClass}\r\n          onClick={() => {\r\n            setSelect(true);\r\n            handleClick(true)\r\n          }}\r\n        >\r\n          <a href=\"#\">注册</a>\r\n        </div>\r\n        <div\r\n          className={loginClass}\r\n          onClick={() => {\r\n            setSelect(false);\r\n            handleClick(false)\r\n          }}\r\n        >\r\n          <a href=\"#\">登录</a>\r\n        </div>\r\n      </div>\r\n      <div className={styles.bodyer}>\r\n        \r\n          <div className={styles.state}>\r\n            <h2>Pick Task 一款帮助个人以更高效的方式开展工作并完成工作</h2>\r\n            <p>Pick Task 以列表和任务卡片的形式为您提供有趣的组织项目方式</p>\r\n          </div>\r\n          <img className={styles.image} src=\"pickTask.png\" alt=\"宣传照片\" />\r\n        </div>\r\n     \r\n      <div className={styles.footer}>Pick Task一个开源的任务管理工具</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\pick-task\\src\\components\\form\\form.js",[],"D:\\pick-task\\src\\pages\\home\\home.js",[],{"ruleId":"39","severity":1,"message":"40","line":1,"column":24,"nodeType":"41","messageId":"42","endLine":1,"endColumn":33},{"ruleId":"39","severity":1,"message":"43","line":3,"column":20,"nodeType":"41","messageId":"42","endLine":3,"endColumn":26},{"ruleId":"39","severity":1,"message":"44","line":6,"column":3,"nodeType":"41","messageId":"42","endLine":6,"endColumn":7},{"ruleId":"39","severity":1,"message":"45","line":16,"column":10,"nodeType":"41","messageId":"42","endLine":16,"endColumn":14},{"ruleId":"39","severity":1,"message":"46","line":16,"column":15,"nodeType":"41","messageId":"42","endLine":16,"endColumn":22},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":13,"column":19,"nodeType":"41","endLine":13,"endColumn":26},{"ruleId":"51","severity":1,"message":"52","line":17,"column":20,"nodeType":"41","endLine":17,"endColumn":27},{"ruleId":"53","severity":1,"message":"54","line":43,"column":11,"nodeType":"55","endLine":43,"endColumn":23},{"ruleId":"53","severity":1,"message":"54","line":52,"column":11,"nodeType":"55","endLine":52,"endColumn":23},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Link' is defined but never used.","'sign' is assigned a value but never used.","'setSign' is assigned a value but never used.","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]